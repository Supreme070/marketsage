name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install backend dependencies
      working-directory: ./marketsage-backend
      run: npm ci

    - name: Run backend tests
      working-directory: ./marketsage-backend
      run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    # Uncomment 'needs: test' if you want builds to depend on tests passing
    # needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and push backend image
      working-directory: ./marketsage-backend
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t ghcr.io/${{ secrets.GHCR_USERNAME }}/marketsage-backend:${{ github.sha }} \
          -t ghcr.io/${{ secrets.GHCR_USERNAME }}/marketsage-backend:latest \
          --push .

    - name: Build and push frontend image
      working-directory: ./marketsage-frontend
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t ghcr.io/${{ secrets.GHCR_USERNAME }}/marketsage-frontend:${{ github.sha }} \
          -t ghcr.io/${{ secrets.GHCR_USERNAME }}/marketsage-frontend:latest \
          --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3

    - name: Configure kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: kubectl apply -f k8s/
