name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install backend dependencies
        working-directory: ./marketsage-backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./marketsage-backend
        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    # Uncomment 'needs: test' if you want builds to wait for tests to pass
    # needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        working-directory: ./marketsage-backend
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/supreme070/marketsage-backend:${{ github.sha }} \
            -t ghcr.io/supreme070/marketsage-backend:latest \
            --push .

      - name: Build and push frontend image
        working-directory: ./marketsage-frontend
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ghcr.io/supreme070/marketsage-frontend:${{ github.sha }} \
            -t ghcr.io/supreme070/marketsage-frontend:latest \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Option 1: Using an SSH action (e.g., appleboy/ssh-action)
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SERVER_SSH_KEY }}
          script: |
            # Pull the latest image and restart your container or service
            docker pull ghcr.io/supreme070/marketsage-backend:latest
            docker pull ghcr.io/supreme070/marketsage-frontend:latest
            # Replace the following with your actual deployment commands
            docker-compose -f /path/to/docker-compose.yml up -d
